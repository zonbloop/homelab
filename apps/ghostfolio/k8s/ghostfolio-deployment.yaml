apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: ghostfolio
  name: ghostfolio
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ghostfolio
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: ghostfolio
    spec:
      containers:
        - env:
            - name: PORT
              value: "3333"
            - name: ACCESS_TOKEN_SALT
              valueFrom:
                configMapKeyRef:
                  key: ACCESS_TOKEN_SALT
                  name: env
            - name: COMPOSE_PROJECT_NAME
              valueFrom:
                configMapKeyRef:
                  key: COMPOSE_PROJECT_NAME
                  name: env
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_URL
                  name: env
            - name: JWT_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET_KEY
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: env
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PASSWORD
                  name: env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: env
            - name: PRISMA_CLIENT_ENGINE_BINARY
              value: "binary"
            - name: PRISMA_CLIENT_ENGINE_LIBRARY
              value: "library"
            - name: PRISMA_QUERY_ENGINE_TIMEOUT
              value: "60000"
            - name: PRISMA_POOL_TIMEOUT
              value: "5"

          image: docker.io/ghostfolio/ghostfolio:latest
          livenessProbe:
            exec:
              command:
                - curl -f http://localhost:3333/api/v1/health
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: ghostfolio
          ports:
            - containerPort: 3333
              protocol: TCP
          securityContext:
            capabilities:
              drop:
                - ALL
      restartPolicy: Always
